// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chatservice.proto

package chatservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Contact struct {
	Email                string   `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Contact) Reset()         { *m = Contact{} }
func (m *Contact) String() string { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()    {}
func (*Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e5b35f0d7f0db1, []int{0}
}

func (m *Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contact.Unmarshal(m, b)
}
func (m *Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contact.Marshal(b, m, deterministic)
}
func (m *Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contact.Merge(m, src)
}
func (m *Contact) XXX_Size() int {
	return xxx_messageInfo_Contact.Size(m)
}
func (m *Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Contact proto.InternalMessageInfo

func (m *Contact) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Contact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AddClientRequest struct {
	Contact              *Contact `protobuf:"bytes,1,opt,name=contact,proto3" json:"contact,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddClientRequest) Reset()         { *m = AddClientRequest{} }
func (m *AddClientRequest) String() string { return proto.CompactTextString(m) }
func (*AddClientRequest) ProtoMessage()    {}
func (*AddClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e5b35f0d7f0db1, []int{1}
}

func (m *AddClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddClientRequest.Unmarshal(m, b)
}
func (m *AddClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddClientRequest.Marshal(b, m, deterministic)
}
func (m *AddClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddClientRequest.Merge(m, src)
}
func (m *AddClientRequest) XXX_Size() int {
	return xxx_messageInfo_AddClientRequest.Size(m)
}
func (m *AddClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddClientRequest proto.InternalMessageInfo

func (m *AddClientRequest) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

type AddClientResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddClientResponse) Reset()         { *m = AddClientResponse{} }
func (m *AddClientResponse) String() string { return proto.CompactTextString(m) }
func (*AddClientResponse) ProtoMessage()    {}
func (*AddClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e5b35f0d7f0db1, []int{2}
}

func (m *AddClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddClientResponse.Unmarshal(m, b)
}
func (m *AddClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddClientResponse.Marshal(b, m, deterministic)
}
func (m *AddClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddClientResponse.Merge(m, src)
}
func (m *AddClientResponse) XXX_Size() int {
	return xxx_messageInfo_AddClientResponse.Size(m)
}
func (m *AddClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddClientResponse proto.InternalMessageInfo

func (m *AddClientResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddClientResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type ShowContactsRequest struct {
	Page                 int32    `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowContactsRequest) Reset()         { *m = ShowContactsRequest{} }
func (m *ShowContactsRequest) String() string { return proto.CompactTextString(m) }
func (*ShowContactsRequest) ProtoMessage()    {}
func (*ShowContactsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e5b35f0d7f0db1, []int{3}
}

func (m *ShowContactsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowContactsRequest.Unmarshal(m, b)
}
func (m *ShowContactsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowContactsRequest.Marshal(b, m, deterministic)
}
func (m *ShowContactsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowContactsRequest.Merge(m, src)
}
func (m *ShowContactsRequest) XXX_Size() int {
	return xxx_messageInfo_ShowContactsRequest.Size(m)
}
func (m *ShowContactsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowContactsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShowContactsRequest proto.InternalMessageInfo

func (m *ShowContactsRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ShowContactsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ShowContactsResponse struct {
	Contact              *Contact `protobuf:"bytes,1,opt,name=contact,proto3" json:"contact,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowContactsResponse) Reset()         { *m = ShowContactsResponse{} }
func (m *ShowContactsResponse) String() string { return proto.CompactTextString(m) }
func (*ShowContactsResponse) ProtoMessage()    {}
func (*ShowContactsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e5b35f0d7f0db1, []int{4}
}

func (m *ShowContactsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowContactsResponse.Unmarshal(m, b)
}
func (m *ShowContactsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowContactsResponse.Marshal(b, m, deterministic)
}
func (m *ShowContactsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowContactsResponse.Merge(m, src)
}
func (m *ShowContactsResponse) XXX_Size() int {
	return xxx_messageInfo_ShowContactsResponse.Size(m)
}
func (m *ShowContactsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowContactsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShowContactsResponse proto.InternalMessageInfo

func (m *ShowContactsResponse) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

type ChatMessage struct {
	MessageFrom          string   `protobuf:"bytes,1,opt,name=MessageFrom,proto3" json:"MessageFrom,omitempty"`
	MessageTo            string   `protobuf:"bytes,2,opt,name=MessageTo,proto3" json:"MessageTo,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=Text,proto3" json:"Text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e5b35f0d7f0db1, []int{5}
}

func (m *ChatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessage.Unmarshal(m, b)
}
func (m *ChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessage.Marshal(b, m, deterministic)
}
func (m *ChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessage.Merge(m, src)
}
func (m *ChatMessage) XXX_Size() int {
	return xxx_messageInfo_ChatMessage.Size(m)
}
func (m *ChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessage proto.InternalMessageInfo

func (m *ChatMessage) GetMessageFrom() string {
	if m != nil {
		return m.MessageFrom
	}
	return ""
}

func (m *ChatMessage) GetMessageTo() string {
	if m != nil {
		return m.MessageTo
	}
	return ""
}

func (m *ChatMessage) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type GetMessagesRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMessagesRequest) Reset()         { *m = GetMessagesRequest{} }
func (m *GetMessagesRequest) String() string { return proto.CompactTextString(m) }
func (*GetMessagesRequest) ProtoMessage()    {}
func (*GetMessagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e5b35f0d7f0db1, []int{6}
}

func (m *GetMessagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMessagesRequest.Unmarshal(m, b)
}
func (m *GetMessagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMessagesRequest.Marshal(b, m, deterministic)
}
func (m *GetMessagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMessagesRequest.Merge(m, src)
}
func (m *GetMessagesRequest) XXX_Size() int {
	return xxx_messageInfo_GetMessagesRequest.Size(m)
}
func (m *GetMessagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMessagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMessagesRequest proto.InternalMessageInfo

func (m *GetMessagesRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type SendMessageResponse struct {
	Code                 string   `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageResponse) Reset()         { *m = SendMessageResponse{} }
func (m *SendMessageResponse) String() string { return proto.CompactTextString(m) }
func (*SendMessageResponse) ProtoMessage()    {}
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52e5b35f0d7f0db1, []int{7}
}

func (m *SendMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageResponse.Unmarshal(m, b)
}
func (m *SendMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageResponse.Marshal(b, m, deterministic)
}
func (m *SendMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageResponse.Merge(m, src)
}
func (m *SendMessageResponse) XXX_Size() int {
	return xxx_messageInfo_SendMessageResponse.Size(m)
}
func (m *SendMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageResponse proto.InternalMessageInfo

func (m *SendMessageResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func init() {
	proto.RegisterType((*Contact)(nil), "chatservice.Contact")
	proto.RegisterType((*AddClientRequest)(nil), "chatservice.AddClientRequest")
	proto.RegisterType((*AddClientResponse)(nil), "chatservice.AddClientResponse")
	proto.RegisterType((*ShowContactsRequest)(nil), "chatservice.ShowContactsRequest")
	proto.RegisterType((*ShowContactsResponse)(nil), "chatservice.ShowContactsResponse")
	proto.RegisterType((*ChatMessage)(nil), "chatservice.ChatMessage")
	proto.RegisterType((*GetMessagesRequest)(nil), "chatservice.GetMessagesRequest")
	proto.RegisterType((*SendMessageResponse)(nil), "chatservice.SendMessageResponse")
}

func init() { proto.RegisterFile("chatservice.proto", fileDescriptor_52e5b35f0d7f0db1) }

var fileDescriptor_52e5b35f0d7f0db1 = []byte{
	// 382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xcf, 0x4e, 0xea, 0x50,
	0x10, 0xc6, 0xd3, 0x5e, 0xb8, 0xc0, 0xf4, 0x86, 0x5c, 0x06, 0x16, 0x4d, 0x73, 0xaf, 0x62, 0x57,
	0xe8, 0x82, 0x10, 0x58, 0xb8, 0xd6, 0x06, 0x0c, 0x31, 0x18, 0xd3, 0xe2, 0x03, 0xd4, 0x76, 0x02,
	0x4d, 0xa0, 0x07, 0x7b, 0x8e, 0x68, 0x7c, 0x45, 0x5f, 0xca, 0xb4, 0x3d, 0x2d, 0x2d, 0x7f, 0x4c,
	0x5c, 0x31, 0x33, 0xcc, 0x7c, 0xbf, 0xf3, 0xcd, 0xa4, 0xd0, 0xf2, 0x96, 0xae, 0xe0, 0x14, 0x6d,
	0x03, 0x8f, 0xfa, 0x9b, 0x88, 0x09, 0x86, 0x5a, 0xa1, 0x64, 0x8e, 0xa0, 0x66, 0xb1, 0x50, 0xb8,
	0x9e, 0xc0, 0x0e, 0x54, 0xc7, 0x6b, 0x37, 0x58, 0xe9, 0x4a, 0x57, 0xe9, 0x35, 0xec, 0x34, 0x41,
	0x84, 0xca, 0x83, 0xbb, 0x26, 0x5d, 0x4d, 0x8a, 0x49, 0x6c, 0xde, 0xc2, 0xdf, 0x1b, 0xdf, 0xb7,
	0x56, 0x01, 0x85, 0xc2, 0xa6, 0x97, 0x57, 0xe2, 0x02, 0xfb, 0x50, 0xf3, 0x52, 0xa1, 0x64, 0x5e,
	0x1b, 0x76, 0xfa, 0x45, 0xb4, 0x84, 0xd8, 0x59, 0x93, 0x79, 0x0d, 0xad, 0x82, 0x06, 0xdf, 0xb0,
	0x90, 0x13, 0x36, 0x41, 0x9d, 0xfa, 0x92, 0xaf, 0x4e, 0xfd, 0x18, 0x6e, 0x31, 0x3f, 0x87, 0xc7,
	0xb1, 0x39, 0x86, 0xb6, 0xb3, 0x64, 0x6f, 0x52, 0x90, 0x67, 0x7c, 0x84, 0xca, 0xa3, 0xbb, 0xa0,
	0x64, 0xb8, 0x6a, 0x27, 0x31, 0x1a, 0x50, 0x8f, 0x7f, 0x9d, 0xe0, 0x23, 0x95, 0xa8, 0xda, 0x79,
	0x6e, 0x4e, 0xa0, 0x53, 0x96, 0x91, 0x4f, 0xf8, 0xa9, 0x0f, 0x17, 0x34, 0x6b, 0xe9, 0x8a, 0x19,
	0x71, 0x1e, 0x23, 0xbb, 0xa0, 0xc9, 0x70, 0x12, 0xb1, 0xb5, 0xb4, 0x52, 0x2c, 0xe1, 0x3f, 0x68,
	0xc8, 0x74, 0xce, 0xa4, 0xb1, 0x5d, 0x21, 0xb6, 0x31, 0xa7, 0x77, 0xa1, 0xff, 0x4a, 0x1d, 0xc7,
	0xb1, 0x79, 0x05, 0x78, 0x47, 0x19, 0x21, 0x37, 0x7c, 0xf4, 0x5c, 0xe6, 0x25, 0xb4, 0x1d, 0x0a,
	0x7d, 0xd9, 0x9c, 0xbb, 0xca, 0x16, 0xa9, 0xec, 0x16, 0x39, 0xfc, 0x54, 0xd3, 0xa7, 0x3b, 0xa9,
	0x35, 0x9c, 0x42, 0xdd, 0xa6, 0x45, 0xc0, 0x05, 0x45, 0xf8, 0xbf, 0x64, 0x7a, 0xff, 0xd8, 0xc6,
	0xd9, 0xa9, 0xbf, 0x25, 0xee, 0x09, 0xfe, 0x14, 0x97, 0x8b, 0xdd, 0x52, 0xff, 0x91, 0xf3, 0x19,
	0x17, 0xdf, 0x74, 0xa4, 0xa2, 0x03, 0x05, 0xef, 0x41, 0x2b, 0x98, 0x43, 0xbd, 0x7c, 0x99, 0xdd,
	0x15, 0x8c, 0x3d, 0xde, 0xe1, 0x42, 0x7a, 0x0a, 0xce, 0xa0, 0x69, 0x93, 0x47, 0xc1, 0x96, 0x32,
	0xbd, 0xf3, 0xd2, 0xd4, 0xe1, 0xca, 0x8d, 0x93, 0xc0, 0x81, 0xf2, 0xfc, 0x3b, 0xf9, 0xb8, 0x46,
	0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x35, 0x34, 0x46, 0x8a, 0x71, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	Register(ctx context.Context, in *AddClientRequest, opts ...grpc.CallOption) (*AddClientResponse, error)
	ShowContacts(ctx context.Context, in *ShowContactsRequest, opts ...grpc.CallOption) (ChatService_ShowContactsClient, error)
	SendMessage(ctx context.Context, opts ...grpc.CallOption) (ChatService_SendMessageClient, error)
	ReceiveMessage(ctx context.Context, in *GetMessagesRequest, opts ...grpc.CallOption) (ChatService_ReceiveMessageClient, error)
}

type chatServiceClient struct {
	cc *grpc.ClientConn
}

func NewChatServiceClient(cc *grpc.ClientConn) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) Register(ctx context.Context, in *AddClientRequest, opts ...grpc.CallOption) (*AddClientResponse, error) {
	out := new(AddClientResponse)
	err := c.cc.Invoke(ctx, "/chatservice.ChatService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) ShowContacts(ctx context.Context, in *ShowContactsRequest, opts ...grpc.CallOption) (ChatService_ShowContactsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatService_serviceDesc.Streams[0], "/chatservice.ChatService/ShowContacts", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatServiceShowContactsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChatService_ShowContactsClient interface {
	Recv() (*ShowContactsResponse, error)
	grpc.ClientStream
}

type chatServiceShowContactsClient struct {
	grpc.ClientStream
}

func (x *chatServiceShowContactsClient) Recv() (*ShowContactsResponse, error) {
	m := new(ShowContactsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatServiceClient) SendMessage(ctx context.Context, opts ...grpc.CallOption) (ChatService_SendMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatService_serviceDesc.Streams[1], "/chatservice.ChatService/SendMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatServiceSendMessageClient{stream}
	return x, nil
}

type ChatService_SendMessageClient interface {
	Send(*ChatMessage) error
	CloseAndRecv() (*SendMessageResponse, error)
	grpc.ClientStream
}

type chatServiceSendMessageClient struct {
	grpc.ClientStream
}

func (x *chatServiceSendMessageClient) Send(m *ChatMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatServiceSendMessageClient) CloseAndRecv() (*SendMessageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendMessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatServiceClient) ReceiveMessage(ctx context.Context, in *GetMessagesRequest, opts ...grpc.CallOption) (ChatService_ReceiveMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatService_serviceDesc.Streams[2], "/chatservice.ChatService/ReceiveMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatServiceReceiveMessageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChatService_ReceiveMessageClient interface {
	Recv() (*ChatMessage, error)
	grpc.ClientStream
}

type chatServiceReceiveMessageClient struct {
	grpc.ClientStream
}

func (x *chatServiceReceiveMessageClient) Recv() (*ChatMessage, error) {
	m := new(ChatMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	Register(context.Context, *AddClientRequest) (*AddClientResponse, error)
	ShowContacts(*ShowContactsRequest, ChatService_ShowContactsServer) error
	SendMessage(ChatService_SendMessageServer) error
	ReceiveMessage(*GetMessagesRequest, ChatService_ReceiveMessageServer) error
}

// UnimplementedChatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatServiceServer struct {
}

func (*UnimplementedChatServiceServer) Register(ctx context.Context, req *AddClientRequest) (*AddClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedChatServiceServer) ShowContacts(req *ShowContactsRequest, srv ChatService_ShowContactsServer) error {
	return status.Errorf(codes.Unimplemented, "method ShowContacts not implemented")
}
func (*UnimplementedChatServiceServer) SendMessage(srv ChatService_SendMessageServer) error {
	return status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}
func (*UnimplementedChatServiceServer) ReceiveMessage(req *GetMessagesRequest, srv ChatService_ReceiveMessageServer) error {
	return status.Errorf(codes.Unimplemented, "method ReceiveMessage not implemented")
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatservice.ChatService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).Register(ctx, req.(*AddClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_ShowContacts_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ShowContactsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServiceServer).ShowContacts(m, &chatServiceShowContactsServer{stream})
}

type ChatService_ShowContactsServer interface {
	Send(*ShowContactsResponse) error
	grpc.ServerStream
}

type chatServiceShowContactsServer struct {
	grpc.ServerStream
}

func (x *chatServiceShowContactsServer) Send(m *ShowContactsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ChatService_SendMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatServiceServer).SendMessage(&chatServiceSendMessageServer{stream})
}

type ChatService_SendMessageServer interface {
	SendAndClose(*SendMessageResponse) error
	Recv() (*ChatMessage, error)
	grpc.ServerStream
}

type chatServiceSendMessageServer struct {
	grpc.ServerStream
}

func (x *chatServiceSendMessageServer) SendAndClose(m *SendMessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatServiceSendMessageServer) Recv() (*ChatMessage, error) {
	m := new(ChatMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ChatService_ReceiveMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetMessagesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServiceServer).ReceiveMessage(m, &chatServiceReceiveMessageServer{stream})
}

type ChatService_ReceiveMessageServer interface {
	Send(*ChatMessage) error
	grpc.ServerStream
}

type chatServiceReceiveMessageServer struct {
	grpc.ServerStream
}

func (x *chatServiceReceiveMessageServer) Send(m *ChatMessage) error {
	return x.ServerStream.SendMsg(m)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chatservice.ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _ChatService_Register_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ShowContacts",
			Handler:       _ChatService_ShowContacts_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SendMessage",
			Handler:       _ChatService_SendMessage_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "ReceiveMessage",
			Handler:       _ChatService_ReceiveMessage_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chatservice.proto",
}
